digraph stages_of_serialization{

    prefix         [shape = box,    style=filled, color=green, label="Stage: Prefix"];
    suffix         [shape = box,    style=filled, color=green, label="Stage: Sufix"];
    ACTION         [shape = circle, label = "Action", style=filled, color=red];

    check_type    [shape = box, style=filled, color=gray,  label = "Internal: Type acquisition"];
    find_action   [shape = box, style=filled, color=gray,  label = "Internal: Action acquisition"];

    fail_action   [shape = octagon, label="Recover: Action fail",      style=filled, color=blue];
    fail_type     [shape = octagon, label="Recover: Type acquisition", style=filled, color=blue];
    fail_no_action[shape = octagon, label="Recover: Action acquisition",        style=filled, color=blue];

    BEGIN[shape = box, label="State: Begin" ];
    END_fail[shape = box, label="State: End(fail)" ];
    END_success[shape = box, label="State: End( succes )" ];

    BEGIN -> check_type[ label = "Success", dir=forward,  ];

    check_type  -> prefix     [ label = "Success", dir=forward   ];
    check_type  -> fail_type  [ label = "fail",    dir=forward  constraint=false ];

    prefix  -> find_action  [ label = "Success", dir=forward   ];
    prefix  -> suffix       [ label = "fail",    dir=forward  constraint=false ];

    find_action ->ACTION         [ label = "Success",  dir=forward  ];
    find_action ->fail_no_action [ label = "fail",     dir=forward  constraint=false ];

    ACTION  -> suffix       [ label = "Success", dir=forward ];
    ACTION  -> fail_action  [ label = "fail",    dir=forward constraint=false ];

    fail_type -> END_success[    label = "Success", dir=forward constraint=false ];
    fail_type -> END_fail[       label = "fail",    dir=forward  constraint=false ];

    fail_action -> suffix[ label = "Success", dir=forward      constraint=false ];
    fail_action -> suffix[ label = "fail",    dir=forward     constraint=false ];

    fail_no_action-> suffix[ label = "Success", dir=forward  constraint=false ];
    fail_no_action-> suffix[ label = "fail",    dir=forward  constraint=false ];
    
    suffix-> END_success[ label = "Success", dir=forward  ];
    suffix-> END_fail[    label = "fail",    dir=forward  constraint=false ];

    fail_type      -> fail_no_action[ label = "", dir=forward  style=invis ];
    fail_no_action -> fail_action[    label = "", dir=forward  style=invis ];
 

    subgraph cluster_before
    {
        rankdir=TB
        node [ ] prefix   ;
        node [ ] find_action   ;
        node [ ] check_type     ;
    }

    subgraph cluster_FAILs
     {
         rank=TB;
         node [ ] fail_type
         node [ ] fail_action
         node [ ] fail_no_action
     }
 
    subgraph cluster_TheEnd
    {
        rankdir=TB;
        node [ ] END_fail;
        node [ ] END_success;
    }


}


